<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>metasploit on #!/bin/note</title><link>https://leonjza.github.io/categories/metasploit/</link><description>Recent content in metasploit on #!/bin/note</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://twitter.com/leonjza">@leonjza&lt;/a></copyright><lastBuildDate>Fri, 24 Mar 2017 17:55:38 +0200</lastBuildDate><atom:link href="https://leonjza.github.io/categories/metasploit/index.xml" rel="self" type="application/rss+xml"/><item><title>sending am-ook using metasploit and rfstransceiver</title><link>https://leonjza.github.io/blog/2017/03/24/sending-am-ook-using-metasploit-and-rfstransceiver/</link><pubDate>Fri, 24 Mar 2017 17:55:38 +0200</pubDate><guid>https://leonjza.github.io/blog/2017/03/24/sending-am-ook-using-metasploit-and-rfstransceiver/</guid><description>
&lt;p>Towards the end of last year, I found myself &lt;a href="https://leonjza.github.io/blog/2016/10/02/reverse-engineering-static-key-remotes-with-gnuradio-and-rfcat/">playing around&lt;/a> with some basic AM/OOK SDR stuffâ„¢. That resulted in &lt;a href="https://github.com/leonjza/ooktools">ooktools&lt;/a> being built to help with making some of that work easier and to help me learn. A few days ago, metasploit announced new &lt;a href="https://community.rapid7.com/community/metasploit/blog/2017/03/21/metasploits-rf-transceiver-capabilities">&amp;lsquo;rftransceiver&amp;rsquo; capabilities&lt;/a> that were added to the framework with a similar goal of making this research easier.&lt;/p>
&lt;figure class="left" >
&lt;img src="https://leonjza.github.io/images/sendingookmetasploit/metasploit.jpg" />
&lt;/figure>
&lt;p>This post is about me playing with these new toys, and as well as releasing a few small modules I wrote.&lt;/p></description></item><item><title>Kali Linux Oracle Support</title><link>https://leonjza.github.io/blog/2014/08/17/kali-linux-oracle-support/</link><pubDate>Sun, 17 Aug 2014 15:46:49 +0000</pubDate><guid>https://leonjza.github.io/blog/2014/08/17/kali-linux-oracle-support/</guid><description>
&lt;p>&lt;strong>EDIT&lt;/strong> This guide has been updated to accomodate a few changes (see &lt;a href="https://github.com/rapid7/metasploit-framework/issues/5422">here&lt;/a>)&lt;/p>
&lt;p>Recently I have had to get Oracle support sorted in my Kali Linux install. I will try not to rant about the reasons why it doesn&amp;rsquo;t just work out of the box and just get the steps written down quickly. Typically, when you try to use a module such as &lt;code>oracle_login&lt;/code>, metasploit may error out with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">msf auxiliary&lt;span style="color:#f92672">(&lt;/span>oracle_login&lt;span style="color:#f92672">)&lt;/span> &amp;gt; run
&lt;span style="color:#f92672">[&lt;/span>-&lt;span style="color:#f92672">]&lt;/span> Failed to load the OCI library: cannot load such file -- oci8
&lt;span style="color:#f92672">[&lt;/span>-&lt;span style="color:#f92672">]&lt;/span> See http://www.metasploit.com/redmine/projects/framework/wiki/OracleUsage &lt;span style="color:#66d9ef">for&lt;/span> installation instructions
&lt;span style="color:#f92672">[&lt;/span>*&lt;span style="color:#f92672">]&lt;/span> Auxiliary module execution completed
msf auxiliary&lt;span style="color:#f92672">(&lt;/span>oracle_login&lt;span style="color:#f92672">)&lt;/span> &amp;gt; run
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The link provided seems a little out of date, so here is an updated guide.&lt;/p></description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>composer on #!/bin/note
</title>
    <link>https://leonjza.github.io/categories/composer/</link>
    <description>Recent content in composer on #!/bin/note
</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://twitter.com/leonjza&#34;&gt;@leonjza&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 30 Sep 2015 19:39:55 +0000</lastBuildDate><atom:link href="https://leonjza.github.io/categories/composer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>a totally unnecessary composer shell</title>
      <link>https://leonjza.github.io/blog/2015/09/30/a-totally-unnecessary-composer-shell/</link>
      <pubDate>Wed, 30 Sep 2015 19:39:55 +0000</pubDate>
      
      <guid>https://leonjza.github.io/blog/2015/09/30/a-totally-unnecessary-composer-shell/</guid>
      <description>&lt;h2 id=&#34;background&#34;&gt;background&lt;/h2&gt;
&lt;figure&gt;
    &lt;img loading=&#34;lazy&#34; src=&#34;https://leonjza.github.io/images/composer_shell_logo.png&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;A silly reverse shell invoked via the Composer Dependency Manager. &lt;a href=&#34;https://github.com/leonjza/composer-shell&#34;&gt;Source here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://getcomposer.org/&#34;&gt;Composer&lt;/a&gt;, which is most probably &lt;em&gt;the&lt;/em&gt; most popular PHP dependency manager allows for &lt;a href=&#34;https://getcomposer.org/doc/articles/scripts.md&#34;&gt;scripts&lt;/a&gt; to run as callbacks on based an event.
Callbacks are normally triggered just before or after certain events.&lt;/p&gt;
&lt;p&gt;It is possible to provide shell commands to the &lt;code&gt;scripts&lt;/code&gt; property in the required &lt;code&gt;composer.json&lt;/code&gt; file (with a few restrictions), but this method echoes the command that it executes.
A slightly more covert approach would be to execute a cleverly named static function in a class included in the codebase. It has to be one that can be autoloaded by composer.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>

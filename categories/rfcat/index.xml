<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rfcat on #!/bin/note</title><link>https://leonjza.github.io/categories/rfcat/</link><description>Recent content in rfcat on #!/bin/note</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://twitter.com/leonjza">@leonjza&lt;/a></copyright><lastBuildDate>Wed, 13 Dec 2017 15:26:28 +0200</lastBuildDate><atom:link href="https://leonjza.github.io/categories/rfcat/index.xml" rel="self" type="application/rss+xml"/><item><title>building the bsidescpt17 rf challenge</title><link>https://leonjza.github.io/blog/2017/12/13/building-the-bsidescpt17-rf-challenge/</link><pubDate>Wed, 13 Dec 2017 15:26:28 +0200</pubDate><guid>https://leonjza.github.io/blog/2017/12/13/building-the-bsidescpt17-rf-challenge/</guid><description>
&lt;p>In this post I want to talk a little about the BSides Cape Town 2017 RFCat challenge and how I went about trying to build a challenge for it. Unfortunately I was not able to able to attend the conference itself, but still had the privilege to contribute in some way!&lt;/p></description></item><item><title>sending am-ook using metasploit and rfstransceiver</title><link>https://leonjza.github.io/blog/2017/03/24/sending-am-ook-using-metasploit-and-rfstransceiver/</link><pubDate>Fri, 24 Mar 2017 17:55:38 +0200</pubDate><guid>https://leonjza.github.io/blog/2017/03/24/sending-am-ook-using-metasploit-and-rfstransceiver/</guid><description>
&lt;p>Towards the end of last year, I found myself &lt;a href="https://leonjza.github.io/blog/2016/10/02/reverse-engineering-static-key-remotes-with-gnuradio-and-rfcat/">playing around&lt;/a> with some basic AM/OOK SDR stuffâ„¢. That resulted in &lt;a href="https://github.com/leonjza/ooktools">ooktools&lt;/a> being built to help with making some of that work easier and to help me learn. A few days ago, metasploit announced new &lt;a href="https://community.rapid7.com/community/metasploit/blog/2017/03/21/metasploits-rf-transceiver-capabilities">&amp;lsquo;rftransceiver&amp;rsquo; capabilities&lt;/a> that were added to the framework with a similar goal of making this research easier.&lt;/p>
&lt;figure class="left" >
&lt;img src="https://leonjza.github.io/images/sendingookmetasploit/metasploit.jpg" />
&lt;/figure>
&lt;p>This post is about me playing with these new toys, and as well as releasing a few small modules I wrote.&lt;/p></description></item><item><title>ooktools: on-off keying tools for your sdr</title><link>https://leonjza.github.io/blog/2016/10/08/ooktools-on-off-keying-tools-for-your-sdr/</link><pubDate>Sat, 08 Oct 2016 11:15:00 +0200</pubDate><guid>https://leonjza.github.io/blog/2016/10/08/ooktools-on-off-keying-tools-for-your-sdr/</guid><description>
&lt;p>In a &lt;a href="https://leonjza.github.io/blog/2016/10/02/reverse-engineering-static-key-remotes-with-gnuradio-and-rfcat/">previous post&lt;/a>, I spoke about a simple static key remote and how to replicate its signal using a small python script and RfCat. As part of the work done there, I set out to write a small tool that should help with some of the tasks involved with this process.&lt;/p>
&lt;figure class="left" >
&lt;img src="https://leonjza.github.io/images/ooktools/banner.png" />
&lt;/figure>
&lt;p>Lets take a look at &lt;code>ooktools&lt;/code>, how to use it and the internals there of. For those in a rush, the repository can be found here: &lt;a href="https://github.com/leonjza/ooktools">https://github.com/leonjza/ooktools&lt;/a>.&lt;/p></description></item><item><title>reverse engineering static key remotes with gnuradio and rfcat</title><link>https://leonjza.github.io/blog/2016/10/02/reverse-engineering-static-key-remotes-with-gnuradio-and-rfcat/</link><pubDate>Sun, 02 Oct 2016 16:05:22 +0200</pubDate><guid>https://leonjza.github.io/blog/2016/10/02/reverse-engineering-static-key-remotes-with-gnuradio-and-rfcat/</guid><description>
&lt;p>At &lt;a href="https://www.defcon.org/html/defcon-24/dc-24-index.html">defcon24&lt;/a> this year, I impulsively bought myself some new toys. Amongst what I got included a &lt;a href="https://greatscottgadgets.com/yardstickone/">YARD Stick One&lt;/a> and a &lt;a href="https://greatscottgadgets.com/ubertoothone/">Ubertooth One&lt;/a>. I already owned a DVB-T dongle much like &lt;a href="https://www.amazon.co.uk/Digital-DVB-T-RTL2832U-FC0013B-Receiver/dp/B00NOP0P6W">this one&lt;/a> that I bought at defcon23 the previous year.&lt;/p>
&lt;p>My interest in Software Defined Radio has long been one of those where I just felt so overwhelmed with the idea for a very long time that I dare not try it. This, together with the fact that its something I &lt;em>totally&lt;/em> know nothing about really did make for this bit of research to be pretty daunting at first.&lt;/p>
&lt;figure class="left" >
&lt;img src="https://leonjza.github.io/images/re_static_key_banner.png" />
&lt;/figure>
&lt;p>Nonetheless, here is my adventure into reverse engineering a plain static key remote and successfully replaying it from my computer.&lt;/p></description></item></channel></rss>